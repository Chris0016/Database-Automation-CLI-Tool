TODO:
    Test Model columns for different inputs:
        ->Fix Bug in email

    *Status Reporting
    
Changes made:

    *Generate SQL String based off given input. 
    *Run SQL Command

    
    
------------
* : Indicates current column working on.

Colums: 
    Name 
    Text: Non-numeric random string of characters is generated. Users can specify max or minimum length.  Default min is 4 and Default max is 200. 
        -mnLen: minimum length (optional)
        -mxLen: max length (optional)

    Custom Col: Col values are selected(can be random with option) from user directed file. If file is not found then the program quits. 
        -o : Select values in order. Not that number of items must match number of rows. 
        Default behavior: Values are selected randomly. 
        
    Number: Using options users can specify whether they want an int or decimal. 
        -dec  
        -currency -> default of false
        -max -> default 100
        -min -> default 0

        default behavior: an integer > 0 is provided

    email:
        -domains [ comma separated list of acceptable domains ]  *Note perform error checking for valid user input domains
        -maxLength
        -minLength

        default behavior: outputs emails containing letters, numbers, underscores, and dots. At least one letter. From domains: gmail.com, outlook.com and yahoo.com
        
    Date:
        -from Start date 
        -to End date
        -format < dd/MM/yyyy, MM/dd/yyyy, ..., MM-dd-yyyy> choose one. 

        default behavior: Gives a random date from 1/1/1990 to current date.
    
    Timestap
        -from
        -to
        -format
    
    Address:
        -lcl Locale default is en-US
        -street: Specify only street name
    City:
        -lcl Locale default is en-US
    Zipcode:
        -lcl Locale default is en-US
    State:
        -lcl Locale default is en-US
    Country:
        -lcl Locale default is en-US
    Timezone:
        -lcl Locale default is en-US
    
    *Generate SQL String based off given input. 
    Run SQL Command
    Status Reporting
        


    
Notes:
     

    For BB Connectin follow example:

    public void addServiceToDB(Service s, Account acct) throws SQLException {

        System.out.println("...adding to db");

        // System.out.println("Current max count in services: " + currentMax); //DEBUG

        String query = "INSERT INTO services VALUES ( "
                + s.getServiceId()
                + ", " + acct.getUserId()
                + ", \'" + s.getServiceName() + "\'"
                + ", \'" + s.getServiceUsername() + "\'"
                + ", \'" + s.getServicePassword() + "\'"
                + ", \'" + s.getDateCreated() + "\'"
                + ", \'" + s.getLastPasswordChange() + "\'"
                + " );";

        PreparedStatement p = connection.prepareStatement(query);
        p.executeUpdate(query);

    }


    Account for primary key -> Make requirement that database must be set to autofill keys
    sql statement might look like -. INsert (?,?,?,?) values (*nokey,* value1, value2,... )


    User input files must follow format. 
    comma separated values with the first value being the number of items in the file.

    Give examples of usage in documentation: 
    Single Day -> Just use the custom col like -> custom -src dateFile. 



